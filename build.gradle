buildscript {
    ext {
        protocVersion = "3.18.0"
        kotlinVersion = "1.5.31"
    }
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath GRADLE_CLASS_PATH
        classpath PROTOBUF_CLASS_PATH
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
}

allprojects {
    repositories {
        maven { url "../../../prebuilts/sdk/current/androidx/m2repository" }
        maven { url "../../../prebuilts/fullsdk-darwin/extras/android/m2repository" }
        maven { url "../../../prebuilts/fullsdk-linux/extras/android/m2repository" }
        maven { url "https://jitpack.io" }
        mavenCentral()
        google()
    }
    ext {
        addFramework = {
            def framework = new File(rootProject.projectDir, "prebuilts/libs/framework.jar")
            gradle.projectsEvaluated {
                tasks.withType(JavaCompile) {
                    options.bootstrapClasspath = files([framework] + (options.bootstrapClasspath.files as Iterable<File>))
                }
            }
        }
    }
}

apply plugin: "com.android.application"
apply plugin: "com.google.protobuf"

android {
    compileSdkVersion COMPILE_SDK
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion 25
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "app", "recents"

    productFlavors {
        aosp {
            dimension "app"
            applicationId "app.lawnchair.launcher3"
            testApplicationId "com.android.launcher3.tests"
        }

        l3go {
            dimension "app"
            applicationId "app.lawnchair.launcher3"
            testApplicationId "com.android.launcher3.tests"
        }

        withQuickstep {
            dimension "recents"

            minSdkVersion 28
        }

        withoutQuickstep {
            dimension "recents"
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name.endsWith("release")) {
            variant.setIgnore(true)
        }
    }

    sourceSets {
        main {
            res.srcDirs = ["res"]
            java.srcDirs = ["src", "src_plugins"]
            manifest.srcFile "AndroidManifest-common.xml"
            proto {
                srcDirs = ["protos/", "quickstep/protos_overrides/"]
            }
        }

        androidTest {
            res.srcDirs = ["tests/res"]
            java.srcDirs = ["tests/src", "tests/tapl"]
            manifest.srcFile "tests/AndroidManifest-common.xml"
        }

        androidTestDebug {
            manifest.srcFile "tests/AndroidManifest.xml"
        }

        aosp {
            java.srcDirs = ["src_flags", "src_shortcuts_overrides"]
        }

        aospWithoutQuickstep {
            manifest.srcFile "AndroidManifest.xml"
        }

        aospWithQuickstep {
            manifest.srcFile "quickstep/AndroidManifest-launcher.xml"
        }

        l3go {
            res.srcDirs = ["go/res"]
            java.srcDirs = ["go/src"]
            manifest.srcFile "go/AndroidManifest.xml"
        }

        l3goWithoutQuickstepDebug {
            manifest.srcFile "AndroidManifest.xml"
        }

        l3goWithQuickstepDebug {
            manifest.srcFile "quickstep/AndroidManifest-launcher.xml"
        }

        withoutQuickstep {
            java.srcDirs = ["src_ui_overrides"]
        }

        withQuickstep {
            res.srcDirs = ["quickstep/res", "quickstep/recents_ui_overrides/res"]
            java.srcDirs = ["quickstep/src", "quickstep/recents_ui_overrides/src"]
            manifest.srcFile "quickstep/AndroidManifest.xml"
        }
    }

   addFramework()
}

dependencies {
    implementation project(":IconLoader")
    implementation fileTree(dir: "prebuilts/libs", include: "PluginCoreLib.jar")
    implementation fileTree(dir: "prebuilts/libs", include: "wm_shell-aidls.jar")
    implementation fileTree(dir: "prebuilts/libs", include: "SystemUI-statsd.jar")
    implementation fileTree(dir: "prebuilts/libs", include: "launcher_quickstep_log_protos_lite.jar")
    implementation "androidx.constraintlayout:constraintlayout:2.1.1"
    implementation "androidx.slice:slice-core:1.1.0-alpha02"
    implementation "com.github.ChickenHook:RestrictionBypass:2.2"
    implementation "androidx.dynamicanimation:dynamicanimation:${ANDROID_X_VERSION}"
    implementation "androidx.recyclerview:recyclerview:${ANDROID_X_VERSION}"
    implementation "androidx.preference:preference:${ANDROID_X_VERSION}"
    withQuickstepImplementation project(":SystemUIShared")
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.mockito:mockito-core:3.9.0"
    androidTestImplementation "com.google.dexmaker:dexmaker:1.2"
    androidTestImplementation "com.google.dexmaker:dexmaker-mockito:1.2"
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "com.android.support.test:rules:1.0.2"
    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:2.1.3"
    androidTestImplementation "androidx.annotation:annotation:${ANDROID_X_VERSION}"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
                java {
                    option "lite"
                }
            }
        }
    }
}
